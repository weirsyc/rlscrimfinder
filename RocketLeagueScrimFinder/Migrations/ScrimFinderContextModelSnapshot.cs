// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RocketLeagueScrimFinder.Models;

namespace RocketLeagueScrimFinder.Migrations
{
    [DbContext(typeof(ScrimFinderContext))]
    partial class ScrimFinderContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RocketLeagueScrimFinder.Models.ChatMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ScrimEventId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Sent")
                        .HasColumnType("datetime2");

                    b.Property<string>("SteamId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ScrimEventId");

                    b.ToTable("ChatMessages");
                });

            modelBuilder.Entity("RocketLeagueScrimFinder.Models.LobbyInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ScrimEventId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScrimEventId");

                    b.ToTable("LobbyInfos");
                });

            modelBuilder.Entity("RocketLeagueScrimFinder.Models.ScrimEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Collegiate")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MatchmakingPreference")
                        .HasColumnType("int");

                    b.Property<string>("OpponentSteamId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Servers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SteamId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ScrimEvents");
                });

            modelBuilder.Entity("RocketLeagueScrimFinder.Models.ScrimRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ScrimEventId")
                        .HasColumnType("int");

                    b.Property<string>("SteamId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ScrimEventId");

                    b.ToTable("ScrimRequests");
                });

            modelBuilder.Entity("RocketLeagueScrimFinder.Models.ChatMessage", b =>
                {
                    b.HasOne("RocketLeagueScrimFinder.Models.ScrimEvent", "ScrimEvent")
                        .WithMany("ChatLogs")
                        .HasForeignKey("ScrimEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScrimEvent");
                });

            modelBuilder.Entity("RocketLeagueScrimFinder.Models.LobbyInfo", b =>
                {
                    b.HasOne("RocketLeagueScrimFinder.Models.ScrimEvent", "ScrimEvent")
                        .WithMany()
                        .HasForeignKey("ScrimEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScrimEvent");
                });

            modelBuilder.Entity("RocketLeagueScrimFinder.Models.ScrimRequest", b =>
                {
                    b.HasOne("RocketLeagueScrimFinder.Models.ScrimEvent", "ScrimEvent")
                        .WithMany("RequestList")
                        .HasForeignKey("ScrimEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScrimEvent");
                });

            modelBuilder.Entity("RocketLeagueScrimFinder.Models.ScrimEvent", b =>
                {
                    b.Navigation("ChatLogs");

                    b.Navigation("RequestList");
                });
#pragma warning restore 612, 618
        }
    }
}
